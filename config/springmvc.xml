<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd 
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.2.xsd 
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-3.2.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-3.2.xsd ">
		
		<!-- 1.把bean的name配置成url的处理映射器,2.处理器适配器SimpleControllerHandlerAdapter的使用：controller类实现Controller接口 -->
		<!-- <bean name="/queryFruits_test.action" class="cn.com.mvc.controller.FruitsServiceControllerTest"></bean>
		<bean class="org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping"></bean>
		<bean class="org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter"></bean>
		<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver"></bean> -->
		
		<!-- 1.通过property配置拦截器和handle处理器的映射 -->
		<!-- <bean id="urlMapping" class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">
			2.拦截器
			<property name="interceptors">
			<list>
				<ref bean="someCheckInterceptor1"/>
				<ref bean="someCheckInterceptor2"/>
			</list>
			</property>
			
			3.处理器映射器
			<property name="mappings">
				<props>
					<prop key="/queryFruits_test1.action">queryFruitsController</prop>
					<prop key="/queryFruits_test2.action">queryFruitsController</prop>
				</props>
			</property>
		</bean>
		<bean class="org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter"></bean>
		<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver"></bean>
		<bean id="queryFruitsController" class="cn.com.mvc.controller.FruitsServiceControllerTest"></bean> -->
		
		<!-- 1.处理器适配器HttpRequestHandlerAdapter的使用：controller类实现HttpRequestHandle接口 -->
		<bean id="urlMapping" class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">
			<!-- 2.拦截器 -->
			
			<!-- 3.处理器映射器 -->
			<property name="mappings">
				<props>
					<prop key="/queryFruits_test1.action">queryFruitsController</prop>
					<prop key="/queryFruits_test2.action">queryFruitsController</prop>
					<prop key="/queryFruits_test3.action">queryFruitsController3</prop>
				</props>
			</property>
		</bean>
		<!-- 这样的方式有助于用户处理http的请求数据，以及设置设置返回对象response的一些参数（例如想要数据的格式） -->
		<bean class="org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter"></bean>
		<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver"></bean>
		<bean id="queryFruitsController" class="cn.com.mvc.controller.FruitsServiceControllerTest"></bean>
		<bean id="queryFruitsController3" class="cn.com.mvc.controller.FruitsServiceControllerTest3"></bean>
		
		<!-- 1.多个处理器映射器与处理器适配器可以共存 -->
		<!-- 2.不处理器映射器与处理器适配器程序也可以运行，原因是springmvc的依赖jar包中包含一个默认的配置文件DispatchSerlvet.properties -->
		<!-- 3.缺点是：一个handle只能写一个方法 -->
</beans>
